/* 
Runner class for RanDungeon game
Runs a randomly generated dungeon following user input at points
*/

// imports for objects and prompt classes
const Enemy = require('./enemyClass.js');
const Player = require('./character.js');
const Room = require('./room.js');

const prompt = require('prompt-sync')();

// helper method to build room objects after checkign for boss/key rooms

function buildRoom(roomNum, keyIn, bossIn, n, s, e, w) {

   var buildVal;

   switch(roomNum) { // compares room numbers to the special values
      case keyIn:
         buildVal = 2;
         break;
      case bossIn:
         buildVal = 3;
         break;
      default:
         buildVal = Math.random();
         break;
   }
   return new Room(buildVal, n, s, e, w); //returns a new room object
}

// start the game
function main() {
   var playerX = 0;
   var playerY = 0;

   let map = [ // a 3x5 2-D array of rooms, the starting room at [0][0], all other rooms are randomly generated.
      [sRoom, room1, room2],
      [room3, room4, room5],
      [room6, room7, room8],
      [room9, room10, room11],
      [room12, room13, room14]
   ]; 

   var bossRoom = (Math.random() * 10) % 14; // randomly generate locations for boss and key
   var keyRoom = (Math.random() * 10) % 14;
   while (keyRoom == bossRoom) {
      keyRoom = (Math.random() * 10) % 14;  // make sure the boss and key room are different rooms
   }

   // build the rooms, I'll have to implement checks for boss and key rooms, as well as lock the boss room until the player has the key
   // that will be for next week
   // all other rooms will be generated by Math.random()

   let sRoom = "This is the starting room, nothing special happens here lol";
   let room1 = buildRoom(0, keyRoom, bossRoom, null, map[1][1], map[0][2], map[0][0]);
   let room2 = buildRoom(1, keyRoom, bossRoom, null, map[1][2], null, map[0][1]);
   let room3 = buildRoom(2, keyRoom, bossRoom, map[0][0], map[2][0], map[1][1], null);
   let room4 = buildRoom(3, keyRoom, bossRoom, map[0][1], map[2][1], map[1][2], map[1][0]);
   let room5 = buildRoom(4, keyRoom, bossRoom, map[0][2], map[2][2], null, map[1][1]);
   let room6 = buildRoom(5, keyRoom, bossRoom, map[1][0], map[3][0], map[2][1], null);
   let room7 = buildRoom(6, keyRoom, bossRoom, map[1][1], map[3][1], map[2][2], map[2][0]);
   let room8 = buildRoom(7, keyRoom, bossRoom, map[1][2], map[3][2], null, map[2][1])
   let room9 = buildRoom(8, keyRoom, bossRoom, map[2][0], map[3][0], map[3][1], null);
   let room10 = buildRoom(9, keyRoom, bossRoom, map[2][1], map[4][1], map[3][2], map[3][0]);
   let room11 = buildRoom(10, keyRoom, bossRoom, map[2][2], map[4][2], null, map[3][1]);
   let room12 = buildRoom(11, keyRoom, bossRoom, map[3][0], null, map[4][1], null);
   let room13 = buildRoom(12, keyRoom, bossRoom, map[3][1], null, map[4][2], map[4][0]);
   let room14 = buildRoom(13, keyRoom, bossRoom, map[3][2], null, null, map[4][1]);

// NEED TO IMPLEMENT BOSS AND KEY ROOM GENERATIONS


   let name = prompt("What is your name, adventurer, that we might know who you are when you achieve greatness? ");

   let pClass = prompt("What kind of adventurer are you? Are you a Mage, or are you a Knight? ");

   var hero;

   if (pClass.toLowerCase().trim() == "knight") {
      hero = new Player(name, "knight", 20, 13, 6);
   } else if (pClass.toLowerCase().trim() == "mage") {
      hero = new Player(name, "mage", 10, 10, 13);
   }

   console.log("Welcome, " + name + ", to RanDungeon, a randomly generated Dungeon Crawling Experience.\n");
   console.log("You may explore the dungeon in any method you like, and you may encounter a variety of different rooms and challenges.\n");
   console.log("You will start the dungeon with your standard adventuring equipment according to your class, as well as 3 health potions, just in case.\n");
   console.log("Now, adventurer, your destiny awaits! Enter the RanDungeon and emerge victorious!\n\n");

   // send adventurer to the start room

   let currRoom = map[playerX][playerY];

   console.log("You find yourself in an empty room, with doors pointing east and south. \nThe doors are unlocked, but you are unable to see into either room without entering.\n");

   while (hero.hp > 0){
      let moved = false;

      while (moved == false) {
         if (currRoom.state == true) {

            let move = prompt("Which way would you like to go? Enter a direction to enter that room. You can also check the map if you want by entering \"MAP\"." );

            if (move.toLowerCase().trim() == "south" && currRoom.getSouth() != null){
               if (map[playerX + 1][playerY].roomType == "boss") {
                  if (hero.hasKey) {
                     currRoom = map[playerX++][playerY];
                     moved = true;
                  }  else {
                     console.log("This door seems locked. It looks like you need a key.\n");
                  }
               } else {
                  currRoom = map[playerX++][playerY];
                  moved = true;
               }
            } else if (move.toLowerCase().trim() == "east" && currRoom.getEast() != null) {
               if (map[playerX][playerY + 1].roomType == "boss") {
                  if (hero.hasKey) {
                     currRoom = map[playerX][playerY++];
                     moved = true;
                  } else {
                     console.log("This door seems locked. It looks like you need a key.\n");
                  }
               } else {
                  currRoom = map[playerX][playerY++];
                  moved = true;
               }
            } else if (move.toLowerCase().trim() == "north" && currRoom.getNorth() != null) {
               if (map[playerX - 1][playerY].roomType == "boss") {
                  if (hero.hasKey) {
                     currRoom = map[playerX--][playerY];
                     moved = true;
                  } else {
                     console.log("This door seems locked. It looks like you need a key.\n");
                  }
               } else {
                  currRoom = map[playerX--][playerY];
                  moved = true;
               }
            } else if (move.toLowerCase().trim() == "west" && currRoom.getWest() != null) {
               if (map[playerX][playerY - 1].roomType == "boss") {
                  if (hero.hasKey) {
                     currRoom = map[playerX][player--];
                     moved = true;
                  } else {
                     console.log("This door seems locked. It looks like you need a key.\n");
                  }
               } else {
                  currRoom = map[playerX][playerY--];
                  moved = true;
               }
            } else if (move.toLowerCase().trim() == "map") {
               for (let i = 0; i < map.length; i++) {
                  for (let j = 0; j < map[0].length; j++) {
                     if (playerX == j && playerY == i) {
                        console.log("[X]");
                     } else {
                        console.log("[ ]");
                     }
                     console.log("\n");
                  }
               }
               console.log("\nX = You Are Here");
            } else {
               console.log("Invalid input, please try again.");
            }
         } else {
            console.log("It seems that the doors won't open yet, maybe there's something left to do here?");
         }
      }

      currRoom.generateRoom();

   }

}

main();